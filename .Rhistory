html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
ui <- shiny::bootstrapPage(
shiny::tags$head(
shiny::includeScript("inst/extdata/www/js/api.js"),  # Always include this file this app
shiny::tags$script(src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"), #Leaflet JS
#      shiny::tags$script(src="https://d3js.org/d3.v4.js"), #D3.js
shiny::tags$script(src="https://d3js.org/d3.v3.js"), #D3.js
shiny::tags$script(src="https://d3js.org/topojson.v1.min.js"), #D3 topojson
#      shiny::tags$script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"),
shiny::includeScript("inst/extdata/www/js/L.D3SvgOverlay.min.js"), #D3-leaflet integration plugin
shiny::includeScript("inst/extdata/www/js/underscore-min.js"),  # Really helpful obj/arr utilities
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$link(rel = "stylesheet", type = "text/css", href = "https://unpkg.com/leaflet@1.0.2/dist/leaflet.css"),
shiny::tags$style(shiny::HTML('
html { height: 100% }
body { height: 100%; margin: 0; padding: 0 }
#map-canvas { height: 100%; width: 100% }'
)),
shiny::includeScript("inst/extdata/www/js/world.js"),  # geojson
shiny::tags$script(shiny::HTML(userJS)), #user data
shiny::tags$script(shiny::HTML(iso_type)) #Type of ISO code (character or numeric)
),
shiny::tags$body(
shiny::tags$div(id = 'map-canvas'),
shiny::includeScript("inst/extdata/www/js/fishRmap.js")	# JavaScript specific to 		actionButton("getRversion", "R version API call"),
#		actionButton("errorFunction", "API call with error")
)
)
server <- function(input, output, session) {
# include the API logic
##Suppress for development
#		source("R/api.R", local = TRUE)$value
source("dev/dev/R/api.R", local = TRUE)$value
session$onSessionEnded(shiny::stopApp)
}
shiny::shinyApp(ui = ui, server = server)
